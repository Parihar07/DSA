{
  "version": "2.1.0",
  "$schema": "https://schemastore.azurewebsites.net/schemas/json/sarif-2.1.0-rtm.5.json",
  "runs": [
    {
      "results": [
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 51,
                  "startColumn": 13,
                  "endLine": 51,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 53,
                  "startColumn": 8,
                  "endLine": 53,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 58,
                  "startColumn": 8,
                  "endLine": 58,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 64,
                  "startColumn": 13,
                  "endLine": 64,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 66,
                  "startColumn": 8,
                  "endLine": 66,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 70,
                  "startColumn": 8,
                  "endLine": 70,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 75,
                  "startColumn": 13,
                  "endLine": 75,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 77,
                  "startColumn": 8,
                  "endLine": 77,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 80,
                  "startColumn": 8,
                  "endLine": 80,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 88,
                  "startColumn": 13,
                  "endLine": 88,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 90,
                  "startColumn": 8,
                  "endLine": 90,
                  "endColumn": 10
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 94,
                  "startColumn": 8,
                  "endLine": 94,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 100,
                  "startColumn": 13,
                  "endLine": 100,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 102,
                  "startColumn": 8,
                  "endLine": 102,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 106,
                  "startColumn": 8,
                  "endLine": 106,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 111,
                  "startColumn": 13,
                  "endLine": 111,
                  "endColumn": 17
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 113,
                  "startColumn": 8,
                  "endLine": 113,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        },
        {
          "ruleId": "C26451",
          "message": {
            "text": "Arithmetic overflow: Using operator '+' on a 4 byte value and then casting the result to a 8 byte value. Cast the value to the wider type before calling operator '+' to avoid overflow (io.2)."
          },
          "locations": [
            {
              "physicalLocation": {
                "artifactLocation": {
                  "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
                },
                "region": {
                  "startLine": 116,
                  "startColumn": 8,
                  "endLine": 116,
                  "endColumn": 12
                }
              },
              "logicalLocations": [
                {
                  "fullyQualifiedName": "addBinSum",
                  "decoratedName": "?addBinSum@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V12@0@Z",
                  "kind": "function"
                }
              ]
            }
          ]
        }
      ],
      "tool": {
        "driver": {
          "name": "PREfast",
          "fullName": "PREfast Code Analysis",
          "version": "14.36.32534.0",
          "informationUri": "https://aka.ms/cpp/ca"
        }
      },
      "invocations": [
        {
          "executionSuccessful": true
        }
      ],
      "artifacts": [
        {
          "location": {
            "uri": "file:///C:/codebreaker/codebreaker/addbinarysum2/abs2.cpp"
          },
          "roles": [
            "analysisTarget",
            "resultFile"
          ],
          "hashes": {
            "sha-256": "e06f809f5a19234fdc3c3307aeb314e7696aefe10d1bad7b489a4060f965b14b"
          }
        }
      ]
    }
  ]
}